//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TeamsApplication.TeamService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SVCTeam", Namespace="http://schemas.datacontract.org/2004/07/TeamService")]
    [System.SerializableAttribute()]
    public partial class SVCTeam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StadiumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StadiumName {
            get {
                return this.StadiumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StadiumNameField, value) != true)) {
                    this.StadiumNameField = value;
                    this.RaisePropertyChanged("StadiumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TeamService.ITeamsService")]
    public interface ITeamsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamsService/ListTeam", ReplyAction="http://tempuri.org/ITeamsService/ListTeamResponse")]
        TeamsApplication.TeamService.SVCTeam[] ListTeam();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamsService/ListTeam", ReplyAction="http://tempuri.org/ITeamsService/ListTeamResponse")]
        System.Threading.Tasks.Task<TeamsApplication.TeamService.SVCTeam[]> ListTeamAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamsService/AddTeam", ReplyAction="http://tempuri.org/ITeamsService/AddTeamResponse")]
        bool AddTeam(TeamsApplication.TeamService.SVCTeam team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamsService/AddTeam", ReplyAction="http://tempuri.org/ITeamsService/AddTeamResponse")]
        System.Threading.Tasks.Task<bool> AddTeamAsync(TeamsApplication.TeamService.SVCTeam team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamsService/DeleteTeam", ReplyAction="http://tempuri.org/ITeamsService/DeleteTeamResponse")]
        bool DeleteTeam(int TeamID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamsService/DeleteTeam", ReplyAction="http://tempuri.org/ITeamsService/DeleteTeamResponse")]
        System.Threading.Tasks.Task<bool> DeleteTeamAsync(int TeamID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITeamsServiceChannel : TeamsApplication.TeamService.ITeamsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TeamsServiceClient : System.ServiceModel.ClientBase<TeamsApplication.TeamService.ITeamsService>, TeamsApplication.TeamService.ITeamsService {
        
        public TeamsServiceClient() {
        }
        
        public TeamsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TeamsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeamsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeamsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TeamsApplication.TeamService.SVCTeam[] ListTeam() {
            return base.Channel.ListTeam();
        }
        
        public System.Threading.Tasks.Task<TeamsApplication.TeamService.SVCTeam[]> ListTeamAsync() {
            return base.Channel.ListTeamAsync();
        }
        
        public bool AddTeam(TeamsApplication.TeamService.SVCTeam team) {
            return base.Channel.AddTeam(team);
        }
        
        public System.Threading.Tasks.Task<bool> AddTeamAsync(TeamsApplication.TeamService.SVCTeam team) {
            return base.Channel.AddTeamAsync(team);
        }
        
        public bool DeleteTeam(int TeamID) {
            return base.Channel.DeleteTeam(TeamID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTeamAsync(int TeamID) {
            return base.Channel.DeleteTeamAsync(TeamID);
        }
    }
}
